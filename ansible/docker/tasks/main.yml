#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/docker

# Install prerequisites for Docker
- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-venv
    state: latest
    update_cache: yes

# Add Docker’s official GPG key
- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

# Set up the Docker stable repository
- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_facts['distribution_release'] }} stable"
    state: present
    update_cache: yes

# Install Docker
- name: Install Docker
  apt:
    name: docker-ce
    state: present

# Install Python3 and pip3
- name: Install Python3 and pip3
  apt:
    name:
      - python3
      - python3-pip
    state: present

# Create a virtual environment for Python packages
- name: Create a virtual environment for Docker SDK
  command: python3 -m venv /opt/docker_venv
  args:
    creates: /opt/docker_venv # Only runs if this directory doesn’t exist

# Install Docker SDK for Python in the virtual environment
- name: Install Docker SDK for Python in virtual environment
  command: /opt/docker_venv/bin/pip install docker

# Ensure Docker is running
- name: Make sure Docker is running
  service:
    name: docker
    state: started
  tags: docker

- name: Log into DockerHub
  community.docker.docker_login:
    registry_url: git.hocine.me
    username: hocine
    password: 5fcdc29caf93b2e8fa45809a607dfd00ce900e35

- name: Create Docker network
  docker_network:
    name: my-network
    state: present

- name: Run Database
  docker_container:
    name: postgres
    image: git.hocine.me/hocine/tp-devops-database:latest
    pull: always
    restart: true
    networks:
      - name: my-network
    env:
      POSTGRES_HOST: postgres
      POSTGRES_USER: usr
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: db

- name: Run App
  docker_container:
    name: simple-api
    image: git.hocine.me/hocine/tp-devops-simple-api:latest
    pull: always
    restart: true
    networks:
      - name: my-network
    env:
      DATABASE_HOST: postgres
      DATABASE_PASSWORD: pwd

- name: Run the frontend
  docker_container:
    name: frontend
    image: git.hocine.me/hocine/tp-devops-frontend:latest
    pull: always
    restart: true
    networks:
      - name: my-network

- name: Run HTTPD
  docker_container:
    name: httpd
    image: git.hocine.me/hocine/tp-devops-http-server:latest
    pull: always
    restart: true
    ports:
      - "80:80"
    networks:
      - name: my-network
